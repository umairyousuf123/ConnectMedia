@model ConnectMedia.Common.DTO.PDFDTO
@{
  ViewData["Title"] = "Create Pdf";
}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://mozilla.github.io/pdf.js/build/pdf.js"></script>

<div class="row">
  <div class="col-lg-12">
    <div class="card card-outline-info">
      <div class="card-header">
        <h4 class="m-b-0 text-white">Create PDF</h4>
      </div>
      <div class="card-body">
          <form asp-action="CreatePdf" method="post" enctype="multipart/form-data">

              <div asp-validation-summary="ModelOnly" class="text-danger"></div>
              <div class="form-group">
                  <label asp-for="Title" class="control-label"></label>
                  <input asp-for="Title" class="form-control" />
                  <span asp-validation-for="Title" class="text-danger"></span>
              </div>
              <div class="form-group">
                  <label asp-for="Desc" class="control-label"></label>
                  <input asp-for="Desc" class="form-control" />
                  <span asp-validation-for="Desc" class="text-danger"></span>
              </div>
              <div class="form-group">
                  <div class="col-md-10">
                      <p>Upload CSV: </p>
                      <label asp-for="pdfFile" class="control-label"></label>
                      <input type="file" asp-for="pdfFile" class="form-control" id="myPdf" />
                      <span asp-validation-for="pdfFile" class="text-danger"></span>
                  </div>
              </div>
              <div class="form-group">
                  <label class="control-label">Start</label>
                  <input type="date" class="form-control" asp-for="StartDate" id="StartDate" />
                  <span asp-validation-for="StartDate" class="text-danger"></span>

                  <input type="time" class="form-control" asp-for="StartTime" id="StartTime" />
                  <span asp-validation-for="StartTime" class="text-danger"></span>
              </div>
            
              <div class="form-group">
                  <label class="control-label">End</label>
                  <input type="date" class="form-control" asp-for="EndDate" id="EndDate" />
                  <span asp-validation-for="EndDate" class="text-danger"></span>

                  <input type="time" class="form-control" asp-for="EndTime" id="EndTime" />
                  <span asp-validation-for="EndTime" class="text-danger"></span>

              </div>
              <div class="form-group">
                  <input type="submit" value="Create" class="btn btn-primary" />
              </div>
          </form>
      </div>
    </div>
  </div>
</div>
<div class="row">
  <div class="text-center col-md-12">
    <div class="paper">
      <canvas id="pdfViewer"></canvas>
    </div>
  </div>
</div>

<script >
  $('.paper').hide();
  // Loaded via <script> tag, create shortcut to access PDF.js exports.
  var pdfjsLib = window['pdfjs-dist/build/pdf'];
  // The workerSrc property shall be specified.
  pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://mozilla.github.io/pdf.js/build/pdf.worker.js';

  $("#myPdf").on("change", function (e) {
    var file = e.target.files[0]
    if (file.type == "application/pdf") {
      var fileReader = new FileReader();
      fileReader.onload = function () {
        var pdfData = new Uint8Array(this.result);
        // Using DocumentInitParameters object to load binary data.
        var loadingTask = pdfjsLib.getDocument({ data: pdfData });
        loadingTask.promise.then(function (pdf) {
          console.log('PDF loaded');

          // Fetch the first page
          var pageNumber = 1;
          pdf.getPage(pageNumber).then(function (page) {
            console.log('Page loaded');

            var scale = 1.5;
            var viewport = page.getViewport({ scale: scale });

            // Prepare canvas using PDF page dimensions
            var canvas = $("#pdfViewer")[0];
            var context = canvas.getContext('2d');
            canvas.height = viewport.height;
            canvas.width = viewport.width;

            // Render PDF page into canvas context
            var renderContext = {
              canvasContext: context,
              viewport: viewport
            };
            $('.paper').show();
            var renderTask = page.render(renderContext);
            renderTask.promise.then(function () {
              console.log('Page rendered');
            });
          });
        }, function (reason) {
          // PDF loading error
          console.error(reason);
        });
      };
      fileReader.readAsArrayBuffer(file);
    }
  });

</script>